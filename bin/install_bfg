#!/bin/bash -eu

function install_bfg_binaries {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  which curl >/dev/null 2>&1 || apt+ install curl

  local name=bfg
  local group=354
  local releases=https://github.com/rtyley/bfg-repo-cleaner/releases
  local latest=${releases}/latest
  local latest="$(curl -I ${latest} 2>/dev/null | fgrep location: | tr -d '[:cntrl:]' | cut -d' ' -f2 | sed -E 's|.*\/v(.*)$|\1|')"
  echo "${name}: latest version: ${latest:-(not detected)}" 1>&2
  local default="${BFG_VERSION:-${latest:-1.14.0}}"
  local version="${1:-${default}}"
  echo "${name}: installing version: ${version}" 1>&2

  local file=${name}-${version}.jar
  local url=https://repo1.maven.org/maven2/com/madgag/bfg/${version}/${file}
  local folder=${name}-${version}
  local subfolder=.
  local symlinks=${name}
  local bin="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}/bin"

  "${dir}"/bash_install_jar "${url}" "${file}" "${folder}" "(${symlinks})" "${bin}" "${subfolder}" "--" "--strip-components=1"

  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/${group}-${name}.sh
  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD > "${config}"
#!/bin/bash
 
export BFG_VERSION=${version}
export BFG_HOME=\${TOOLS_HOME:=\$HOME/tools}/${folder}
EOD
  chmod ugo+x "${config}"
  echo "${config}"
}


function __install_bfg {
  self=$(readlink -f "${BASH_SOURCE[0]}"); dir=$(dirname $self)
  grep -E "^function [a-zA-Z0-9]" $self | cut -d' ' -f2 | while read cmd ;do
    $cmd $*
  done
}


if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function [a-zA-Z0-9]" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
