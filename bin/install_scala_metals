#!/bin/bash -eu

function __install_scala_metals_worker() (
  local bin="${1}"
  local version="${2}"

  which coursier > /dev/null 2>&1 || ${dir}/install_coursier
  ## coursier install --dir "${bin}" metals
  coursier bootstrap \
     --java-opt -Xss4m \
     --java-opt -Xms100m \
     --java-opt -Dmetals.client=emacs \
     org.scalameta:metals_2.13:${version} \
     -r bintray:scalacenter/releases \
     -r sonatype:snapshots \
     -o ${bin}/metals-emacs \
     --force --quiet

  coursier install --dir "${bin}" bloop
)

function __install_scala_metals_logger() (
  set -x
  __install_scala_metals_worker $@ 2> ${log}
)

function __install_scala_metals_emacs() (
  local log=$(mktemp -t install_scala_metals.XXX.log)
  echo "INFO: See installation log at: ${log}"
  set +e
  __install_scala_metals_logger $@ 2> ${log}
  local errno=$?
  set -e
  [[ ${errno} -eq 0 ]] || echo "ERROR: errno=${errno} :: installation failed."
  return ${errno}  
)

function install_scala_metals_emacs {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  which curl >/dev/null 2>&1 || apt+ install curl

  local name=metals
  local group=352
  local releases=https://github.com/scalameta/metals/releases
  local latest=${releases}/latest
  local latest="$(curl -I ${latest} 2>/dev/null | fgrep location: | tr -d '[:cntrl:]' | cut -d' ' -f2 | sed -E 's|.*\/v(.*)$|\1|')"
  echo "${name}: latest version: ${latest:-(not detected)}" 1>&2
  local default="${METALS_VERSION:-${latest:-0.11.6}}"
  local version="${1:-${default}}"
  echo "${name}: installing version: ${version}" 1>&2

  local bin="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}/bin"

  __install_scala_metals_emacs "${bin}" "${version}"
  echo ${bin}/bloop
  echo ${bin}/metals

  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/${group}-${name}.sh
  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD > "${config}"
#!/bin/bash

export METALS_VERSION=${version}
export METALS_HOME=${bin}
EOD
  chmod ugo+x "${config}"
  echo "${config}"
}

function __install_scala_metals {
  self=$(readlink -f "${BASH_SOURCE[0]}"); dir=$(dirname $self)
  grep -E "^function [a-zA-Z0-9]" $self | cut -d' ' -f2 | while read cmd ;do
    $cmd $*
  done
}


if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function [a-zA-Z0-9]" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
