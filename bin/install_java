#!/bin/bash -eu

function install_java_binaries {
  self=$(readlink -f "${BASH_SOURCE[0]}")
  dir=$(dirname $self)

  local version=${version:-"8"}
  local version=${1:-"${version}"}

  local name=jdk
  local group=300
  if [[ $version =~ ^8(\.[0-9]+)?(\.[0-9]+)?(\+[0-9]+)? ]] ;then
    local major=8
    local default=8u362-b09
  elif [[ $version =~ ^11(\.[0-9]+)?(\.[0-9]+)?(\+[0-9]+)? ]] ;then
    local major=11
    local default=11.0.18+10
  elif [[ $version =~ ^16(\.[0-9]+)?(\.[0-9]+)?(\+[0-9]+)? ]] ;then
    local major=16
    local default=16.0.2+7
  elif [[ $version =~ ^17(\.[0-9]+)?(\.[0-9]+)?(\+[0-9]+)? ]] ;then
    local major=17
    local default=17.0.9+9
  elif [[ $version =~ ^18(\.[0-9]+)?(\.[0-9]+)?(\+[0-9]+)? ]] ;then
    local major=18
    local default=18.0.2.1+1
  elif [[ $version =~ ^19(\.[0-9]+)?(\.[0-9]+)?(\+[0-9]+)? ]] ;then
    local major=19
    local default=19.0.2+7
  else
    echo "ERROR: Unsupported Java version $JAVA_VERSION"
    echo 'INFO: Supported JDK versions are: 8.*, 11.*, 16.*, 17.*, 18.*'
    return 1
  fi

  if [[ "${version}" == "${major}" ]] ;then
    version=${default}
  fi

  local hwarch=$(uname -m | tr '[:upper:]' '[:lower:]')
  local osarch=$(uname -s | tr '[:upper:]' '[:lower:]')
  case "${hwarch}" in
      x86_64)  hwarch=x64 ;;
      i386)    hwarch=x86-32 ;;
      armv7l)  hwarch=arm ;;
      aarch64) hwarch=aarch64 ;;
      *) echo "ERROR: hardware platform is not supported: ${hwarch}" ; return 1 ;;
  esac
  case "${osarch}" in
      linux)  osarch=linux;;
      darwin) osarch=mac;;
      *) echo "ERROR: software platform is not supported: ${osarch}" ; return 1 ;;
  esac
  local arch=${hwarch}_${osarch}

  which curl >/dev/null 2>&1 || apt+ install curl

  local name=jdk
  local group=300
  local releases=https://github.com/adoptium/temurin${major}-binaries/releases
  local archive=https://github.com/adoptium/jdk${major}u/archive
  local latest=${releases}/latest
  local latest="$(curl -I ${latest} 2>/dev/null | fgrep location: | tr -d '[:cntrl:]' | cut -d' ' -f2 | sed -E 's|.*\/jdk[-]?(.*)$|\1|')"
  echo "${name}: latest version: ${latest:-(not detected)}" 1>&2
  local version="${version:-${latest:-${default}}}"
  echo "${name}: installing version: ${version}" 1>&2

  ## paths for Java8 differ from newer versions
  if [[ "${major}" == "8" ]] ;then
    local jpackage="jdk${version}"
  else
    local jpackage="jdk-"$(echo "${version}" | sed 's/+/%2B/')
  fi
  # version conventions for Java8 differ from newer versions
  local jversion=$(echo "${version}" | tr -d "-" | sed 's/+/_/')

  local file=OpenJDK${major}U-jdk_${arch}_hotspot_${jversion}.tar.gz
  local url=${releases}/download/${jpackage}/${file}
  local folder=${name}-${version}
  local subfolder=bin
  local symlinks=
  local bin="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}/bin"
  "${dir}"/bash_install_tar "${url}" "${file}" "${folder}" "(${symlinks})" "${bin}" "${subfolder}" "--" "--strip-components=1"

  local src=${archive}/refs/tags/${jpackage}.tar.gz
  "${dir}"/bash_install_tar "${src}" "${jpackage}.tar.gz" "${folder}" "--" "--strip-components=1"

  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/${group}-${name}.sh
  local major=$(echo ${version} | cut -d. -f1)
  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD > "${config}"
#!/bin/bash

export JAVA_VERSION=${version}
export JAVA_VERSION_MAJOR=${major}
export JAVA_HOME=\${TOOLS_HOME:=\$HOME/tools}/${folder}
export PATH=\${JAVA_HOME}/bin:\${PATH}
EOD
  chmod ugo+x "${config}"
  echo "${config}"
}

function __install_java {
  self=$(readlink -f "${BASH_SOURCE[0]}"); dir=$(dirname $self)
  grep -E "^function [a-zA-Z0-9]" $self | cut -d' ' -f2 | while read cmd ;do
    $cmd $*
  done
}

if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function [a-zA-Z0-9]" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
